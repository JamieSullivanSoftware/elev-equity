---
import { Icon } from 'astro-icon/components';
import type { Question } from './Questions.astro';

interface Props {
  question: Question;
  index: number;
}

const { question, index } = Astro.props;
const { text, answer } = question;
---

<div
  id={`question-${index}`}
  class='faq container sans-regular'
  data-show='false'
  aria-label={`FAQ dropdown button ${index + 1}`}
>
  <div class='question'>
    <div>
      <span>{`${index} .`}</span>
      <p>{text}</p>
    </div>
    <div
      id={`icon-${index}`}
      class='icon'
      data-show='false'
      aria-label={`FAQ dropdown button ${index + 1}`}
    >
      <Icon
        name='material-symbols:close'
        width={30}
        height={30}
      />
    </div>
  </div>
  <div
    id={`answer-${index}`}
    class='answer'
    data-show='false'
  >
    {answer}
  </div>
</div>

<style lang='scss'>
  @import '../../styles/variables.scss';

  .container {
    cursor: pointer;
    color: $dark;
    background-color: $neutral-light;
    margin-bottom: 2rem;
    padding: 1.25rem 1rem 0;
    position: relative;
    border-radius: 0.25rem;
  }

  .question {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 1rem;

    div {
      display: flex;

      span {
        min-width: max-content;
        margin-right: 0.5rem;
      }

      p {
        margin-right: 0.5rem;
      }
    }

    .icon {
      &[data-show='false'] {
        transition: rotate 0.2s ease;
        rotate: -45deg;
      }

      &[data-show='true'] {
        transition: rotate 0.2s ease;
        rotate: 0deg;
      }

      &:last-child {
        display: flex;
        justify-self: flex-end;
        background: transparent;
        border: 0;
      }
    }

    &:last-child {
      margin-bottom: 0;
    }
  }

  .answer {
    padding-left: 1.5rem;

    &[data-show='false'] {
      height: 0;
      transition: all 0.3s ease-in;
      transition-property: height, padding;
      overflow: hidden;
    }

    &[data-show='true'] {
      height: var(--openHeight);
      transition: all 0.3s ease-out;
      transition-property: height, padding;
      overflow: hidden;
      padding-bottom: 1.5rem;
    }
  }
</style>

<script>
  const questions = document.querySelectorAll('.faq');

  questions.forEach((question) => {
    const id = question.id.split('-')[1];
    const answerElement = document.getElementById(`answer-${id}`);
    answerElement.style.setProperty(
      '--openHeight',
      answerElement.scrollHeight + 'px'
    );

    question.addEventListener('click', () => {
      openDropdown(id, questions);
    });
  });

  const openDropdown = (id: string, questions: NodeListOf<Element>) => {
    const questionElement = document.getElementById(`question-${id}`);
    const answerElement = document.getElementById(`answer-${id}`);
    const iconElement = document.getElementById(`icon-${id}`);

    answerElement.style.setProperty(
      '--openHeight',
      answerElement.scrollHeight + 'px'
    );

    if (answerElement.dataset.show === 'false') {
      questionElement.dataset.show = 'true';
      answerElement.dataset.show = 'true';
      iconElement.dataset.show = 'true';
    } else {
      questionElement.dataset.show = 'false';
      answerElement.dataset.show = 'false';
      iconElement.dataset.show = 'false';
    }

    // Close Open Dropdown
    questions.forEach((question) => {
      const questionId = question.id.split('-')[1];
      if (questionId !== id) {
        document.getElementById(`question-${questionId}`).dataset.show =
          'false';
        document.getElementById(`answer-${questionId}`).dataset.show = 'false';
        document.getElementById(`icon-${questionId}`).dataset.show = 'false';
      }
    });
  };
</script>
