---
import { Icon } from 'astro-icon/components';
import type { Question } from './Questions.astro';

interface Props {
  question: Question;
  index: number;
}

const { question, index } = Astro.props;
const { text, answer } = question;
---

<div class='container sans-regular'>
  <div class='question'>
    <span>{`${index} .`}</span>
    <span>{text}</span>
    <button id={`button-${index}`}>
      <Icon
        name='material-symbols:close'
        width={30}
        height={30}
      />
    </button>
  </div>
  <div
    id={`answer-${index}`}
    class='answer'
    data-show='false'
  >
    {answer}
  </div>
</div>

<style lang='scss'>
  @import '../../styles/variables.scss';

  .container {
    color: $dark;
    background-color: $neutral-light;
    margin-bottom: 2rem;
    padding: 1.25rem 1rem 0;
    position: relative;
  }

  .question {
    display: grid;
    grid-template-columns: max-content max-content auto;
    grid-gap: 0.5rem;
    align-items: center;
    margin-bottom: 1rem;
    // padding: 1.25rem 1rem;

    button:last-child {
      display: flex;
      justify-self: flex-end;
      background: transparent;
      border: 0;
    }
  }

  .question:last-child {
    margin-bottom: 0;
  }

  .answer {
    padding: 0 0 0 1.5rem;
    // position: absolute;
    // background-color: red;
    // width: 100%;
    // left: 0;
    // top: 0;
    // padding: 1.25rem 1rem;

    &[data-show='false'] {
      height: 0;
      // // transition: all 0.5s linear;
      transition: all 0.5s;
      // // transition-property: height, opacity;
      overflow: hidden;

      // transform: scaleY(0);
      // transform-origin: top;

      // transform: translateY(0px);
      // transition: transform 0.5s ease;

      // opacity: 0;
      // transition: opacity 0.5s linear;
      // padding: 1.25rem 1rem;
      // max-height: 0;
      // transition: max-height 0.5s linear;
      // transform: scaleY(0);
      // transform-origin: top;
      // transition: transform 0.8s ease;
      // transition: transform 0.4s cubic-bezier(0.5, 0, 0.3, 1);
    }

    &[data-show='true'] {
      // transform: translateY(40px);
      overflow: hidden;
      transition: all 0.5s;
      height: var(--openHeight);
      padding-bottom: 1rem;

      // max-height: auto;
      // height: calc(100%);
      // transition: all 0.5s linear;
      // transition-property: height, opacity;
      // opacity: 1;
      // transition: opacity 0.5s linear;
      // transform: scaleY(1);
      // transition: 0.5s linear;
      // padding: 1.25rem 1rem;
      // transition: 0.5ms;
      // transform: scale(1);
    }
  }

  @keyframes animateToBottom {
    from {
      transform: translate3d(0, 0, 0);
      opacity: 1;
    }
    to {
      transform: translate3d(0, 10px, 0);
      opacity: 0;
    }
  }

  @media only screen and (min-width: $tablet) {
    .question {
      margin-bottom: 3rem;
    }
  }
</style>

<script>
  const buttons = document.querySelectorAll('button');

  buttons.forEach((button) => {
    button.addEventListener('click', () => {
      const id = button.id.split('-')[1];
      openDropdown(id);
    });
  });

  const openDropdown = (id: string) => {
    const answerElement = document.getElementById(`answer-${id}`);
    console.log(answerElement.scrollHeight);

    if (answerElement.dataset.show === 'false') {
      answerElement.style.setProperty(
        '--openHeight',
        answerElement.scrollHeight + 'px'
      );
      answerElement.dataset.show = 'true';
    } else {
      answerElement.dataset.show = 'false';
    }
  };
</script>
