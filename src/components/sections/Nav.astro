---
import { Image } from 'astro:assets';
import logo from '../../images/logo.svg';
import { Icon } from 'astro-icon/components';

interface Props {
  links: string[];
}

const { links } = Astro.props;
---

<nav>
  <div class='wrapper container'>
    <a href='#'>
      <Image
        src={logo}
        alt='Logo'
        width='60'
        height='50'
      />
    </a>

    <button id='mobile-button'>
      <Icon
        class='mobile-icon'
        name='material-symbols:menu-rounded'
        width={40}
        height={40}
      />
    </button>

    <ul>
      {
        links.map((link: string) => (
          <li>
            <a
              class='lf-medium nav-link'
              href='#'
            >
              {link}
            </a>
          </li>
        ))
      }
    </ul>
  </div>
  <div
    id='mobile-menu'
    class='mobile-menu_hidden'
  >
    Mobile Menu
  </div>
</nav>

<style lang='scss'>
  @use 'sass:color';
  @import '../../styles/variables.scss';

  nav {
    background-color: $dark;
    padding: 1rem 0rem;
  }

  .container {
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  ul {
    display: none;
  }

  button {
    background: none;
    border: 0;
    cursor: pointer;
  }

  a {
    color: $white;
    text-decoration: none;
  }

  a:hover {
    color: color.scale($primary, $lightness: 75%);
  }

  .mobile-icon {
    display: block;
    color: $white;
  }

  .mobile-menu {
    &_hidden {
      display: none;
    }

    &_show {
      display: block;
      background-color: red;
    }
  }

  @media only screen and (min-width: $mobile) {
    ul {
      display: grid;
      grid-template-columns: repeat(5, min-content);
      grid-gap: 1rem;
      list-style: none;
    }

    .mobile-icon {
      display: none;
    }
  }
</style>

<script>
  const links = document.querySelectorAll('a.nav-link');
  const mobileButton = document.getElementById('mobile-button');
  const mobileMenu = document.getElementById('mobile-menu');

  links.forEach((link: HTMLAnchorElement) => {
    link.addEventListener('click', () => {
      document
        .getElementById(link.innerHTML.toLowerCase().trim())
        .scrollIntoView({
          behavior: 'smooth',
        });
    });
  });

  mobileButton.addEventListener('click', () => {
    if (mobileMenu.classList.contains('mobile-menu_show')) {
      mobileMenu.classList.add('mobile-menu_hidden');
      mobileMenu.classList.remove('mobile-menu_show');
    } else {
      mobileMenu.classList.remove('mobile-menu_hidden');
      mobileMenu.classList.add('mobile-menu_show');
    }
  });
</script>
